name: Build Electron App (Manual Trigger)

# Allows you to run this workflow manually from the Actions tab
on:
  workflow_dispatch:

jobs:
  build-windows-package:
    # The type of runner that the job will run on
    runs-on: windows-latest # Use a Windows runner to build for Windows natively

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4 # Use a recent stable version

      # Sets up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4 # Use a recent stable version
        with:
          node-version: '20' # Specify the Node.js version your project uses
          cache: 'npm' # Cache npm dependencies

      # Installs dependencies
      # 'npm ci' is generally recommended for CI as it installs exactly from lockfile
      # Use 'npm install' if you don't have a package-lock.json or prefer that
      - name: Install dependencies
        run: npm ci

      # Runs the build script defined in package.json
      # Assumes 'npm run dist' uses electron-builder and package.json
      # has 'build.win.target' configured (e.g., to produce a zip file)
      - name: Build Windows package
        run: npm run dist
        # No need for '-- --win' here because the runner is already Windows

      # Uploads the build output (the zip file) as an artifact
      # Adjust the path if your output directory or file pattern is different
      - name: Upload Windows zip package Artifact
        uses: actions/upload-artifact@v4 # Use a recent stable version
        with:
          name: my-electron-app-windows-zip # Name of the artifact shown in GitHub UI
          path: dist/*.zip # Path to the zip file generated by electron-builder
          # If you configured 'portable' target instead of 'zip':
          # path: dist/*-portable.exe
          # If you configured 'dir' or want the unpacked files:
          # path: dist/win-unpacked/
          if-no-files-found: error # Optional: Fail the step if no matching file is found
